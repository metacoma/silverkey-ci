version: '3'
services:
#  ldap_wait:
#    image: appropriate/nc:latest
#    restart: always
#    depends_on:
#      - ldap
#    command: -zv ldap 636



  ldap:
    image: osixia/openldap:1.2.0
    hostname: ldap
    volumes:
      # on host
      # mkdir certs && cd certs && CA.sh -newca && CA.sh -sign
      - ./certs/:/container/service/slapd/assets/certs
    environment:
      - "LDAP_TLS_CRT_FILENAME=newcert.pem"
      - "LDAP_TLS_KEY_FILENAME=newreq.pem"
      - "LDAP_TLS_CA_CRT_FILENAME=demoCA/cacert.pem"
      - "LDAP_ORGANISATION=silverkey"
      - "LDAP_DOMAIN=silverkey"
      - "LDAP_ADMIN_PASSWORD=${LDAP_PASSWORD}"
    expose:
      - 389
      - 636
    networks:
      - silverkey-infra
  ldap-admin:
    image: osixia/phpldapadmin:0.7.1
    volumes:
      - ./certs/:/container/service/ldap-client/assets/certs/
    hostname: ldap-admin
    environment:
      - "PHPLDAPADMIN_LDAP_HOSTS=ldaps://ldap"
      - "PHPLDAPADMIN_LDAP_CLIENT_TLS=true"
      - "PHPLDAPADMIN_LDAP_CLIENT_TLS_CA_CRT_FILENAME=demoCA/cacert.pem"
      - "PHPLDAPADMIN_LDAP_CLIENT_TLS_CRT_FILENAME=newcert.pem"
      - "PHPLDAPADMIN_LDAP_CLIENT_TLS_KEY_FILENAME=newreq.pem"
#    depends_on:
#      - ldap_wait
    ports:
      - 0.0.0.0:6443:443
    networks:
      - silverkey-infra

  ci:
    #image: jenkins/jenkins:lts-alpine
    image: jenkins/jenkins:latest
    expose:
      - 8080
    environment:
      - VIRTUAL_HOST=$PUBLIC_DNS
      - VIRTUAL_PORT=8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    networks:
      - silverkey-infra

  lam:
    image: computersciencehouse/ldap-account-manager
    restart: always
    #volumes:
    #  - ./certs/demoCA/cacert.pem:/etc/ssl/certs/ca-certificates.crt
    ports:
      - 8081:8080
    networks:
      - silverkey-infra

  nginx-proxy:
    image: jwilder/nginx-proxy
    volumes:
      - ./nginx-certs/:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 0.0.0.0:80:80
      - 0.0.0.0:443:443
    networks:
      - silverkey-infra

#  nginx-gen:
#    image: jwilder/docker-gen
#    command: -notify-sighup ${NGINX_WEB:-nginx-web} -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
#    container_name: ${DOCKER_GEN:-nginx-gen}
#    restart: always
#    volumes:
#      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
#      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
#      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
#      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
#      - ${NGINX_FILES_PATH:-./data}/htpasswd:/etc/nginx/htpasswd:ro
#      - /var/run/docker.sock:/tmp/docker.sock:ro
#      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
#    logging:
#      options:
#        max-size: ${NGINX_GEN_LOG_MAX_SIZE:-2m}
#        max-file: ${NGINX_GEN_LOG_MAX_FILE:-10}
#
#  nginx-letsencrypt:
#    image: jrcs/letsencrypt-nginx-proxy-companion
#    container_name: ${LETS_ENCRYPT:-nginx-letsencrypt}
#    restart: always
#    volumes:
#      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
#      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
#      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
#      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:rw
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    environment:
#      NGINX_DOCKER_GEN_CONTAINER: ${DOCKER_GEN:-nginx-gen}
#      NGINX_PROXY_CONTAINER: ${NGINX_WEB:-nginx-web}
#    logging:
#      options:
#        max-size: ${NGINX_LETSENCRYPT_LOG_MAX_SIZE:-2m}
#        max-file: ${NGINX_LETSENCRYPT_LOG_MAX_FILE:-10}


volumes:
  certs:
  nginx-certs:

networks:
  silverkey-infra:
